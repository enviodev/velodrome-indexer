type LiquidityPoolNew {
  id: ID! # pool address
  chainID: BigInt! # chain id of the pool
  name: String! # name of the pool
  token0: Token! # token0 entity
  token1: Token! # token1 entity
  isStable: Boolean! # whether the pool is a stable AMM or a volatile AMM
  reserve0: BigInt! # reserve of token0 in token units
  reserve1: BigInt! # reserve of token1 in token units
  totalLiquidityUSD: BigInt! # total liquidity of the swap pool in USD
  totalVolume0: BigInt! # total swap volume of token0 in token units
  totalVolume1: BigInt! # total swap volume of token1 in token units
  totalVolumeUSD: BigInt! # total swap volume of the pool in USD
  totalFees0: BigInt! # total fees collected in token0 units
  totalFees1: BigInt! # total fees collected in token1 units
  totalFeesUSD: BigInt! # total fees collected in USD
  numberOfSwaps: BigInt! # total number of swaps in the pool
  token0Price: BigInt! # price of token0 relative to token1
  token1Price: BigInt! # price of token1 relative to token0
  totalEmissions: BigInt! # total emissions for the pool in reward token units (VELO form Optimism and AERO for Base)
  totalEmissionsUSD: BigInt! # total emissions for the pool in USD
  totalBribesUSD: BigInt! # total bribes for the pool in USD
  lastUpdatedTimestamp: BigInt! # timestamp of last update
  liquidityPoolHourlySnapshots: [LiquidityPoolHourlySnapshot!]!  # hourly snapshots of the pool
    @derivedFrom(field: "pool")
  liquidityPoolDailySnapshots: [LiquidityPoolDailySnapshot!]!  # daily snapshots of the pool
    @derivedFrom(field: "pool")
  liquidityPoolWeeklySnapshots: [LiquidityPoolWeeklySnapshot!]!  # weekly snapshots of the pool
    @derivedFrom(field: "pool")
}

# Entity for tracking a unique address in the `to` or `from` of a swap event
# Other liquidity pools don't count as users
type User {
  id: ID! # user address
  numberOfSwaps: BigInt! # total number of swaps the user has made
  joined_at_timestamp: BigInt! # timestamp of the user's first swap (or being swapped to), Not accurate if run in multihead unordered mode.
}

# Hourly snapshot of the LiquidityPool entity
type LiquidityPoolHourlySnapshot {
  id: ID! # address of the pool - number of days since unix epoch time
  chainID: BigInt! # chain id of the pool
  pool: String! # address of the pool
  name: String! # name of the pool
  reserve0: BigInt! # reserve of token0 in token units
  reserve1: BigInt! # reserve of token1 in token units
  totalLiquidityUSD: BigInt! # total liquidity of the swap pool in USD
  totalVolume0: BigInt! # total swap volume of token0 in token units
  totalVolume1: BigInt! # total swap volume of token1 in token units
  totalVolumeUSD: BigInt! # total swap volume of the pool in USD
  totalFees0: BigInt! # total fees collected in token0 units
  totalFees1: BigInt! # total fees collected in token1 units
  totalFeesUSD: BigInt! # total fees collected in USD
  numberOfSwaps: BigInt! # total number of swaps in the pool
  token0Price: BigInt! # price of token0 relative to token1
  token1Price: BigInt! # price of token1 relative to token0
  totalEmissions: BigInt! # total emissions for the pool in reward token units (VELO form Optimism and AERO for Base)
  totalEmissionsUSD: BigInt! # total emissions for the pool in USD
  totalBribesUSD: BigInt! # total bribes for the pool in USD
  lastUpdatedTimestamp: BigInt! # timestamp of last update
}

# Daily snapshot of the LiquidityPool entity
type LiquidityPoolDailySnapshot {
  id: ID! # address of the pool - number of days since unix epoch time
  chainID: BigInt! # chain id of the pool
  pool: String! # address of the pool
  name: String! # name of the pool
  reserve0: BigInt! # reserve of token0 in token units
  reserve1: BigInt! # reserve of token1 in token units
  totalLiquidityUSD: BigInt! # total liquidity of the swap pool in USD
  totalVolume0: BigInt! # total swap volume of token0 in token units
  totalVolume1: BigInt! # total swap volume of token1 in token units
  totalVolumeUSD: BigInt! # total swap volume of the pool in USD
  totalFees0: BigInt! # total fees collected in token0 units
  totalFees1: BigInt! # total fees collected in token1 units
  totalFeesUSD: BigInt! # total fees collected in USD
  numberOfSwaps: BigInt! # total number of swaps in the pool
  token0Price: BigInt! # price of token0 relative to token1
  token1Price: BigInt! # price of token1 relative to token0
  totalEmissions: BigInt! # total emissions for the pool in reward token units (VELO form Optimism and AERO for Base)
  totalEmissionsUSD: BigInt! # total emissions for the pool in USD
  totalBribesUSD: BigInt! # total bribes for the pool in USD
  lastUpdatedTimestamp: BigInt! # timestamp of last update
}

# Weekly snapshot of the LiquidityPool entity
type LiquidityPoolWeeklySnapshot {
  id: ID! # address of the pool - number of weeks since unix epoch time
  chainID: BigInt! # chain id of the pool
  pool: String! # address of the pool
  name: String! # name of the pool
  reserve0: BigInt! # reserve of token0 in token units
  reserve1: BigInt! # reserve of token1 in token units
  # totalLiquidityETH: BigInt! # total liquidity of the swap pool in ETH
  totalLiquidityUSD: BigInt! # total liquidity of the swap pool in USD
  totalVolume0: BigInt! # total swap volume of token0 in token units
  totalVolume1: BigInt! # total swap volume of token1 in token units
  totalVolumeUSD: BigInt! # total swap volume of the pool in USD
  totalFees0: BigInt! # total fees collected in token0 units
  totalFees1: BigInt! # total fees collected in token1 units
  totalFeesUSD: BigInt! # total fees collected in USD
  numberOfSwaps: BigInt! # total number of swaps in the pool
  token0Price: BigInt! # price of token0 relative to token1
  token1Price: BigInt! # price of token1 relative to token0
  totalEmissions: BigInt! # total emissions for the pool in reward token units (VELO form Optimism and AERO for Base)
  totalEmissionsUSD: BigInt! # total emissions for the pool in USD
  totalBribesUSD: BigInt! # total bribes for the pool in USD
  lastUpdatedTimestamp: BigInt! # timestamp of last update
}

# Entity that tracks the latest state of the token entity
# By nature this entity saves the latest state of the token, and its state at different times should be attained from the snapshot entities
type Token {
  id: ID! # token address
  symbol: String! # token symbol
  name: String! # token name
  chainID: BigInt! # chain id of the token
  decimals: BigInt! # number of decimals
  pricePerUSDNew: BigInt! # price of token per USD
  lastUpdatedTimestamp: BigInt! # timestamp of last update
  tokenHourlySnapshots: [TokenHourlySnapshot!]! @derivedFrom(field: "token") # hourly snapshots of the token
  tokenDailySnapshots: [TokenDailySnapshot!]! @derivedFrom(field: "token") # daily snapshots of the token
  tokenWeeklySnapshots: [TokenWeeklySnapshot!]! @derivedFrom(field: "token") # weekly snapshots of the token
}

# Hourly snapshot of the LiquidityPool entity
type TokenHourlySnapshot {
  id: ID! # address of the token - number of weeks since unix epoch time
  symbol: String! # token symbol
  name: String! # token name
  chainID: BigInt! # chain id of the token
  token: String! # token address
  pricePerUSDNew: BigInt! # price of token per USD
  lastUpdatedTimestamp: BigInt! # timestamp of last update
}

# Daily snapshot of the LiquidityPool entity
type TokenDailySnapshot {
  id: ID! # address of the token - number of weeks since unix epoch time
  symbol: String! # token symbol
  name: String! # token name
  chainID: BigInt! # chain id of the token
  token: String! # token address
  pricePerUSDNew: BigInt! # price of token per USD
  lastUpdatedTimestamp: BigInt! # timestamp of last update
}

# Weekly snapshot of the LiquidityPool entity
type TokenWeeklySnapshot {
  id: ID! # address of the token - number of weeks since unix epoch time
  symbol: String! # token symbol
  name: String! # token name
  chainID: BigInt! # chain id of the token
  token: String! # token address
  pricePerUSDNew: BigInt! # price of token per USD
  lastUpdatedTimestamp: BigInt! # timestamp of last update
}
